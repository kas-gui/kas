[package]
name = "kas"
version = "0.15.0"
authors = ["Diggory Hardy <git@dhardy.name>"]
edition = "2021"
license = "Apache-2.0"
description = "A pure-Rust GUI toolkit with stateful widgets"
readme = "README.md"
documentation = "https://docs.rs/kas/"
keywords = ["gui"]
categories = ["gui"]
repository = "https://github.com/kas-gui/kas"
exclude = ["/examples"]
rust-version = "1.86.0"

[package.metadata.docs.rs]
features = ["stable"]
rustdoc-args = ["--cfg", "docsrs"]
# To build locally:
# RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --features=stable,internal_doc --all --no-deps --open

[features]
#########  meta / build features  #########

# The minimal feature set needed to run basic applications (with assumptions
# about target platforms).
#
# Note: only some examples build in this configuration; others need view,
# markdown, resvg. Recommended also: clipboard, ron (or some config format).
minimal = ["wgpu", "winit", "wayland", "vulkan", "dx12", "metal"]
# All recommended features for optimal experience
default = ["minimal", "view", "image", "resvg", "clipboard", "markdown", "shaping", "spawn"]
# All standard test target features
stable = ["default", "x11", "serde", "toml", "yaml", "json", "ron", "macros_log"]
# Enables all "recommended" features for nightly rustc
nightly = ["stable", "nightly-diagnostics", "kas-core/nightly"]
# Additional, less recommendation-worthy features
experimental = ["dark-light", "unsafe_node"]

# Enable dynamic linking (faster linking via an extra run-time dependency):
dynamic = ["dep:kas-dylib"]

#########  optional dependencies / features  #########

# Enables better proc-macro diagnostics (including warnings); nightly only.
nightly-diagnostics = ["kas-core/nightly-diagnostics"]

# Use full specialization
spec = ["kas-core/spec"]

# Enable view widgets
view = ["dep:kas-view"]

#Enable WGPU backend:
wgpu = ["dep:kas-wgpu"]

# WGPU backends
vulkan = ["kas-wgpu?/vulkan"]
gles = ["kas-wgpu?/gles"]
dx12 = ["kas-wgpu?/dx12"]
metal = ["kas-wgpu?/metal"]

# Enables documentation of APIs for graphics library and platform backends.
# This API is not intended for use by end-user applications and
# thus is omitted from built documentation by default.
# This flag does not change the API, only built documentation.
internal_doc = ["kas-core/internal_doc", "kas-wgpu?/internal_doc"]

# Enables clipboard read/write
clipboard = ["kas-core/clipboard"]

# Enable Markdown parsing
markdown = ["kas-core/markdown"]

# Enable text shaping
shaping = ["kas-wgpu/shaping"]

# Enable serde support (mainly config read/write)
serde = ["kas-core/serde"]

# Enable support for YAML (de)serialisation
yaml = ["serde", "kas-core/yaml"]

# Enable support for JSON (de)serialisation
json = ["serde", "kas-core/json"]

# Enable support for RON (de)serialisation
ron = ["serde", "kas-core/ron"]

# Enable support for TOML (de)serialisation
toml = ["serde", "kas-core/toml"]

# Support image loading and decoding
image = ["kas-core/image", "kas-widgets/image"]

# Enable resvg module (Canvas + Svg widgets)
resvg = ["dep:kas-resvg", "kas-resvg?/svg", "kas-dylib?/resvg"]
# Enable resvg module (Canvas only)
tiny-skia = ["dep:kas-resvg"]

# Automatically detect usage of dark theme
#
# Not a default dependency; see https://github.com/emilk/egui/issues/2388
dark-light = ["kas-core/dark-light"]

# Support spawning async tasks
spawn = ["kas-core/spawn"]

# Support SVG images

# Inject logging into macro-generated code.
# Requires that all crates using these macros depend on the log crate.
macros_log = ["kas-core/macros_log"]

winit = ["kas-core/winit"]

# Support Wayland
wayland = ["kas-core/wayland"]

# Support X11
x11 = ["kas-core/x11"]

# Optimize Node using unsafe code
unsafe_node = ["kas-core/unsafe_node"]

[dependencies]
kas-core = { version = "0.15.0", path = "crates/kas-core" }
kas-dylib = { version = "0.15.0", path = "crates/kas-dylib", optional = true }
kas-widgets = { version = "0.15.0", path = "crates/kas-widgets" }
kas-view = { version = "0.15.0", path = "crates/kas-view", optional = true }
kas-resvg = { version = "0.15.0", path = "crates/kas-resvg", optional = true }

[dependencies.kas-wgpu]
version = "0.15.0"
path = "crates/kas-wgpu"
optional = true
default-features = false

[dev-dependencies]
chrono = "0.4"
env_logger = "0.11"
log = "0.4"

[workspace]
members = [
    "crates/kas-core",
    "crates/kas-dylib",
    "crates/kas-macros",
    "crates/kas-resvg",
    "crates/kas-wgpu",
    "crates/kas-widgets",
    "crates/kas-view",
    "examples/mandlebrot",
]

[patch.crates-io.kas-text]
git = "https://github.com/kas-gui/kas-text.git"
rev = "2f70ffd4"
